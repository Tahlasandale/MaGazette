<!DOCTYPE html>
<html lang="fr">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Vue du Jour</title>
<style>
    * {margin: 0; padding: 0; box-sizing: border-box; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;}

    body {
        background: #1e1e2f;
        color: #e0e0e0;
        display: flex;
        flex-direction: column;
        min-height: 100vh;
        padding: 20px;
    }

    h1 {text-align: center; margin-bottom: 5px; color: #c0c0ff;}

    .current-time { 
        text-align: center; 
        font-family: 'Press Start 2P', monospace; 
        font-size: 3rem; 
        color: #b0b0ff; 
        margin-bottom: 20px; 
    }

    @import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');

    .progress-container {
        width: 100%;
        height: 25px;
        background: #2c2c3c;
        border-radius: 15px;
        overflow: hidden;
        margin-bottom: 30px;
    }

    .progress-bar {
        height: 100%;
        width: 0;
        background: linear-gradient(90deg, #a1c4fd, #c2e9fb);
        border-radius: 15px;
        transition: width 0.5s ease;
    }

    .current-activity {
        background: #2c2c3c;
        border-radius: 15px;
        padding: 20px;
        box-shadow: 0 4px 10px rgba(0,0,0,0.5);
        margin-bottom: 30px;
        text-align: center;
        transition: background 0.3s ease;
    }

    .current-activity h2 { margin-bottom: 10px; color: #b0b0ff; font-weight: normal; }
    .current-activity p { font-size: 18px; color: #d0d0ff; font-weight: bold; }

    .timeline { display: flex; flex-direction: column; gap: 15px; margin-bottom: 30px; display: none; }

    .timeline-item, .widget-container, .planning-button, .toggle-button {
        background: #2c2c3c;
        border-radius: 15px;
        padding: 15px 20px;
        box-shadow: 0 3px 8px rgba(0,0,0,0.3);
        display: flex;
        justify-content: center;
        align-items: center;
        text-align: center;
        transition: transform 0.3s ease, background 0.3s ease;
        margin-bottom: 15px;
    }

    .timeline-item:hover, .planning-button:hover, .toggle-button:hover { background: #3a3a5a; transform: translateY(-3px); }

    .planning-button { 
        display: block;
        color: #fff;
        font-weight: bold;
        text-decoration: none;
        margin: 0 auto 30px auto;
    }

    .widget-container iframe { width: 100%; height: 240px; border-radius: 15px; }

    .toggle-button { cursor: pointer; color: #fff; font-weight: bold; }

    @media(max-width: 768px){
        .timeline-item { flex-direction: column; align-items: flex-start; }
    }
</style>
</head>
<body>

<h1>Vue du Jour</h1>
<div class="current-time" id="current-time">00:00</div>

<div class="progress-container">
    <div class="progress-bar" id="progress-bar"></div>
</div>

<div class="current-activity" id="current-activity">
    <h2>Activité en cours</h2>
    <p id="current-activity-text">Chargement...</p>
</div>

<div class="toggle-button" id="toggle-timeline">Afficher / Masquer la liste des activités</div>
<div class="timeline" id="timeline"></div>

<div class="widget-container">
    <iframe src="https://indify.co/widgets/live/calendar/EZcMbUI9HBUDk6IVjoMb" height="240"></iframe>
</div>

<a class="planning-button" href="https://intranet.polytech.universite-paris-saclay.fr/planning.html" target="_blank">Voir le planning Polytech</a>

<script>
const activities = [
    { start: '06:50', end: '07:15', label: 'Prière + sac + petit dej' },
    { start: '07:15', end: '08:15', label: 'Trajet école' },
    { start: '08:15', end: '17:45', label: 'Cours' },
    { start: '17:45', end: '18:45', label: 'Trajet retour' },
    { start: '18:45', end: '19:05', label: 'Pause libre + sport d’appartement' },
    { start: '19:05', end: '20:00', label: 'Bloc productif' },
    { start: '20:00', end: '21:25', label: 'Dîner + détente' },
    { start: '21:25', end: '21:30', label: 'Feedback du jour' },
    { start: '21:30', end: '22:15', label: 'Détente hors écran' },
    { start: '22:15', end: '23:00', label: 'Coucher' }
];

const timelineEl = document.getElementById('timeline');
const progressBar = document.getElementById('progress-bar');
const currentActivityText = document.getElementById('current-activity-text');
const currentTimeEl = document.getElementById('current-time');
const toggleTimelineBtn = document.getElementById('toggle-timeline');

function timeToMinutes(t) {
    const [h, m] = t.split(':').map(Number);
    return h * 60 + m;
}

function updateTimeline() {
    const now = new Date();
    const hours = now.getHours().toString().padStart(2,'0');
    const minutes = now.getMinutes().toString().padStart(2,'0');
    currentTimeEl.textContent = `${hours}:${minutes}`;

    const currentMinutes = now.getHours() * 60 + now.getMinutes();

    const dayStart = timeToMinutes('06:50');
    const dayEnd = timeToMinutes('22:15');
    let progress = ((currentMinutes - dayStart) / (dayEnd - dayStart)) * 100;
    progress = Math.min(Math.max(progress, 0), 100);
    progressBar.style.width = progress + '%';

    let currentActivity = 'Aucune activité';
    activities.forEach(act => {
        if(currentMinutes >= timeToMinutes(act.start) && currentMinutes < timeToMinutes(act.end)) {
            currentActivity = `${act.label} (${act.start} - ${act.end})`;
        }
    });
    currentActivityText.textContent = currentActivity;

    timelineEl.innerHTML = '';
    activities.forEach(act => {
        const item = document.createElement('div');
        item.className = 'timeline-item';
        item.innerHTML = `<span>${act.start} - ${act.end}</span><span>${act.label}</span>`;
        timelineEl.appendChild(item);
    });
}

updateTimeline();
setInterval(updateTimeline, 60000);

toggleTimelineBtn.addEventListener('click', () => {
    if(timelineEl.style.display === 'none' || timelineEl.style.display === '') {
        timelineEl.style.display = 'flex';
        timelineEl.scrollIntoView({behavior: 'smooth', block: 'end'});
    } else {
        timelineEl.style.display = 'none';
    }
});
</script>
</body>
</html>
